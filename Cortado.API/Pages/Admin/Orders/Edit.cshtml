@page
@model Cortado.API.Pages.Admin.Orders.EditModel
@{
}

<div style="margin-bottom: 60px;">
    <h5>Orders > Edit > @Model.Order.Id</h5>

    <form method="post">
        <input type="hidden" asp-for="Order.Id" />
        <input type="hidden" asp-for="Order.ProductId" />
        <input type="hidden" asp-for="Order.IsPaid"/>
        <input type="hidden" asp-for="Order.PaymentId" />
        <input type="hidden" asp-for="Order.IsConfirmed" />

        <div class="row" >
            <div class="col-md-12">
                <div class="d-flex flex-column gap-2 mt-3">
                    <div class="d-flex align-items-start">
                        <div class="fw-semibold text-secondary flex-shrink-0" style="width:120px;">Product:</div>
                        <div>@Model.Product.Name</div>
                    </div>
                    <div class="d-flex align-items-start">
                        <div class="fw-semibold text-secondary flex-shrink-0" style="width:120px;">Order number:</div>
                        <div class="text-dark">@Model.Order.OrderNumber</div>
                    </div>
                    <div class="d-flex align-items-start">
                        <div class="fw-semibold text-secondary flex-shrink-0" style="width:120px;">Email:</div>
                        <div class="text-dark">@Model.Order.Email</div>
                    </div>
                    <div class="d-flex align-items-start">
                        <div class="fw-semibold text-secondary flex-shrink-0" style="width:120px;">Phone:</div>
                        <div class="text-dark">@Model.Order.PhoneNumber</div>
                    </div>
                    <div class="d-flex align-items-start">
                        <div class="fw-semibold text-secondary flex-shrink-0" style="width:120px;">Order date:</div>
                        <div class="text-dark">@Model.Order.OrderDate</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-md-12 d-flex">
                <div class="form-group d-flex align-items-center" style="margin: 16px 24px 16px 0">
                    <label class="form-label me-2" style="font-weight: bold; color: #6c757d;">Is verified:</label>
                    <span class="badge @(Model.Order.IsVerified ? "bg-success" : "bg-danger")">
                        @((Model.Order.IsVerified) ? "Verified" : "Not verified")
                    </span>
                </div>
                <div class="form-group d-flex align-items-center" style="margin: 16px 24px 16px 0">
                    <label class="form-label me-2" style="font-weight: bold; color: #6c757d;">Is paid:</label>
                    <span class="badge @(Model.Order.IsPaid ? "bg-success" : "bg-danger")">
                        @((Model.Order.IsPaid) ? "Paid" : "Not paid")
                    </span>
                </div>
                @if (@Model.Order.IsPaid)
                {
                    <div class="form-group d-flex align-items-center" style="margin: 16px 24px 16px 0">
                        <label class="form-label me-2" style="font-weight: bold; color: #6c757d;">Payment id:</label>
                        <span style="margin-left: 8px; ">@Model.Order.PaymentId</span>

                    </div>
                }
                <div class="form-group d-flex align-items-center" style="margin: 16px 24px 16px 0">
                    <label class="form-label me-2" style="font-weight: bold; color: #6c757d;">Is confirmed:</label>
                    <span class="badge @(Model.Order.IsConfirmed ? "bg-success" : "bg-danger")">
                        @((Model.Order.IsConfirmed) ? "Confirmed" : "Not confirmed")
                    </span>
                </div>
            </div>
        </div>
        </form>

    <hr/>
    <div class="row">
        <div class="col-md-12 d-flex">
            <form method="post">
                <input type="hidden" asp-for="Order.Id" />
                <button type="submit" asp-page-handler="MarkAsVerified" class="btn btn-sm btn-primary" style="margin-right: 16px;" disabled="@(Model.Order.IsVerified)">Mark as Verified</button>
            </form>
            <button type="button" class="btn btn-sm btn-primary" onclick="ShowModal()" style="margin-right: 16px" disabled="@(Model.Order.IsPaid || !Model.Order.IsVerified)">Mark as Paid</button>
            <form method="post" >
                <input type="hidden" asp-for="Order.Id" />
                <button type="submit" asp-page-handler="MarkAsConfirmed" class="btn btn-sm btn-primary" disabled="@(Model.Order.IsConfirmed || !Model.Order.IsPaid)">Mark as Confirmed</button>
            </form>
        </div>
    </div>
    <hr/>

    <div class="mt-4">
        <h5>Order Items</h5>

        <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Item
                </th>
                    <th>
                        Unit price
                    </th>
                <th>
                    Quantity
                </th>
                <th>Line total</th>
            
                @* <th></th> *@
            </tr>
        </thead>
        <tbody>
            @if (Model.Order.OrderItems != null)
            {
                foreach (var item in Model.Order.OrderItems)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductItemName)
                        </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnitPrice)
                            </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LineTotal)
                            </td>
                        @* <td>
                            <a asp-page="/Admin/ProductItems/Edit" asp-route-id="@item.Id" asp-route-productId="@Model.Product.Id">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        </td> *@
                    </tr>
                }
            }

                <tr><td colspan="3" align="right" style="font-weight:bold">Sub Total</td><td>@Model.Order.SubTotal</td></tr>
                <tr><td colspan="3" align="right" style="font-weight:bold">Total Amount</td><td>@Model.Order.TotalAmount</td></tr>
        </tbody>
    </table>
    </div>

    <div>
        <form asp-page-handler="GenerateTickets" method="post">
            <input type="hidden" asp-for="Order.Id" />
            <button type="submit" class="btn btn-sm btn-primary" disabled="@(Model.Tickets != null && Model.Tickets.Any() ||!(Model.Order.IsPaid && Model.Order.IsVerified && Model.Order.IsConfirmed))">Generate Ticket(s)</button>
        </form>
    </div>

    <div class="mt-4">
        <h5>Tickets</h5>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Ticket number
                    </th>
                    <th>
                        Used
                    </th>
                    <th>
                        Used date
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Tickets != null)
                {
                    foreach (var item in Model.Tickets)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(itemModel => item.TicketNumber)
                            </td>
                            <td>
                               @item.IsUsed
                            </td>
                            <td></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    
    <div>
        <a asp-page="./Index" asp-route-productCode="@Model.Product.Code">Back to List</a>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="MarkAsPaid" id="modalForm">
                <input type="hidden" asp-for="Order.Id" />
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Mark Order as Paid</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!--Error container-->
                    <div id="modalErrorContainer" class="alert alert-danger d-none"></div>
                <div class="form-group">
                    <label asp-for="Order.PaymentId" class="form-label"></label>
                    <input asp-for="Order.PaymentId" class="form-control" required />
                    <span asp-validation-for="Order.PaymentId" class="text-danger"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnClose">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ShowModal() {

        $("#exampleModal").modal('show');
    }

    // function HideModal() {
    //     $("#exampleModal").modal('hide');
    // }
    document.addEventListener("DOMContentLoaded", function () {
     document.getElementById("modalForm").addEventListener("submit", function (event) {
         debugger;
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);
            console.log("Form action:", form.action); // Debug the action URL
                   const errorContainer = document.getElementById("modalErrorContainer");
        fetch(form.action, {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            debugger;
            if (data.success) {
                // Close the modal if the operation was successful
                $("#exampleModal").modal("hide");
                // Optionally, refresh the page or update the UI
                location.reload();
            } else {
                 // Display validation errors
                errorContainer.classList.remove("d-none"); // Show the error container
                errorContainer.innerHTML = data.errors.join("<br>"); // Populate with errors
            }
        })
        .catch(error => {
            console.error("Error:", error);
             console.error("Error:", error);
            errorContainer.classList.remove("d-none"); // Show the error container
            errorContainer.innerHTML = "An unexpected error occurred. Please try again.";
        });
    });
    $("#btnClose").on("click", function() {
        debugger;
        $("#exampleModal").modal("hide");
    })
        
    });    
</script>